#include "authentication/cram_md5/authenticatee.hpp"
#include "authentication/cram_md5/authenticator.hpp"
#include "authentication/cram_md5/auxprop.hpp"
#include "authorizer/local/authorizer.hpp"
#include "common/build.hpp"
#include "common/date_utils.hpp"
#include "common/http.hpp"
#include "common/parse.hpp"
#include "common/protobuf_utils.hpp"
#include "common/recordio.hpp"
#include "common/resources_utils.hpp"
#include "common/status_utils.hpp"
#include "credentials/credentials.hpp"
#include "docker/docker.hpp"
#include "docker/executor.hpp"
#include "event_loop.hpp"
#include "examples/test_anonymous_module.hpp"
#include "examples/test_module.hpp"
#include "examples/utils.hpp"
#include "files/files.hpp"
#include "gate.hpp"
#include "hdfs/hdfs.hpp"
#include "hook/manager.hpp"
#include "internal/devolve.hpp"
#include "internal/evolve.hpp"
#include "jvm/java/lang.hpp"
#include "jvm/jvm.hpp"
#include "libevent.hpp"
#include "linux/cgroups.hpp"
#include "linux/fs.hpp"
#include "linux/ns.hpp"
#include "linux/perf.hpp"
#include "linux/sched.hpp"
#include "linux/systemd.hpp"
#include "local/flags.hpp"
#include "local/local.hpp"
#include "log/catchup.hpp"
#include "log/consensus.hpp"
#include "log/coordinator.hpp"
#include "log/leveldb.hpp"
#include "log/log.hpp"
#include "log/network.hpp"
#include "log/recover.hpp"
#include "log/replica.hpp"
#include "log/storage.hpp"
#include "log/tool.hpp"
#include "log/tool/benchmark.hpp"
#include "log/tool/initialize.hpp"
#include "log/tool/read.hpp"
#include "log/tool/replica.hpp"
#include "logging/flags.hpp"
#include "logging/logging.hpp"
#include "master/allocator/mesos/allocator.hpp"
#include "master/allocator/mesos/hierarchical.hpp"
#include "master/allocator/sorter/drf/sorter.hpp"
#include "master/allocator/sorter/sorter.hpp"
#include "master/constants.hpp"
#include "master/contender.hpp"
#include "master/detector.hpp"
#include "master/flags.hpp"
#include "master/machine.hpp"
#include "master/maintenance.hpp"
#include "master/master.hpp"
#include "master/metrics.hpp"
#include "master/registrar.hpp"
#include "master/registry.hpp"
#include "master/registry.pb.h"
#include "master/repairer.hpp"
#include "master/validation.hpp"
#include "mesos/executor.hpp"
#include "mesos/mesos.hpp"
#include "mesos/resources.hpp"
#include "mesos/type_utils.hpp"
#include "messages/flags.hpp"
#include "messages/flags.pb.h"
#include "messages/log.hpp"
#include "messages/log.pb.h"
#include "messages/messages.hpp"
#include "messages/messages.pb.h"
#include "messages/state.hpp"
#include "messages/state.pb.h"
#include "module.hpp"
#include "module/manager.hpp"
#include "openssl.hpp"
#include "poll_socket.hpp"
#include "process/delay.hpp"
#include "process/future.hpp"
#include "process/help.hpp"
#include "process/http.hpp"
#include "process/logging.hpp"
#include "process/process.hpp"
#include "process/profiler.hpp"
#include "process/timer.hpp"
#include "process_reference.hpp"
#include "protobuf_tests.pb.h"
#include "proxy_executor.hpp"
#include "proxy_scheduler.hpp"
#include "sched/constants.hpp"
#include "sched/flags.hpp"
#include "slave/constants.hpp"
#include "slave/containerizer/containerizer.hpp"
#include "slave/containerizer/docker.hpp"
#include "slave/containerizer/external_containerizer.hpp"
#include "slave/containerizer/fetcher.hpp"
#include "slave/containerizer/isolator.hpp"
#include "slave/containerizer/isolators/cgroups/constants.hpp"
#include "slave/containerizer/isolators/cgroups/cpushare.hpp"
#include "slave/containerizer/isolators/cgroups/mem.hpp"
#include "slave/containerizer/isolators/cgroups/perf_event.hpp"
#include "slave/containerizer/isolators/filesystem/linux.hpp"
#include "slave/containerizer/isolators/filesystem/posix.hpp"
#include "slave/containerizer/isolators/filesystem/shared.hpp"
#include "slave/containerizer/isolators/namespaces/pid.hpp"
#include "slave/containerizer/isolators/posix.hpp"
#include "slave/containerizer/isolators/posix/disk.hpp"
#include "slave/containerizer/launcher.hpp"
#include "slave/containerizer/linux_launcher.hpp"
#include "slave/containerizer/mesos/containerizer.hpp"
#include "slave/containerizer/mesos/launch.hpp"
#include "slave/containerizer/provisioner/appc/paths.hpp"
#include "slave/containerizer/provisioner/appc/spec.hpp"
#include "slave/containerizer/provisioner/appc/store.hpp"
#include "slave/containerizer/provisioner/backend.hpp"
#include "slave/containerizer/provisioner/backends/bind.hpp"
#include "slave/containerizer/provisioner/backends/copy.hpp"
#include "slave/containerizer/provisioner/docker/local_puller.hpp"
#include "slave/containerizer/provisioner/docker/message.hpp"
#include "slave/containerizer/provisioner/docker/message.pb.h"
#include "slave/containerizer/provisioner/docker/metadata_manager.hpp"
#include "slave/containerizer/provisioner/docker/paths.hpp"
#include "slave/containerizer/provisioner/docker/puller.hpp"
#include "slave/containerizer/provisioner/docker/registry_client.hpp"
#include "slave/containerizer/provisioner/docker/spec.hpp"
#include "slave/containerizer/provisioner/docker/store.hpp"
#include "slave/containerizer/provisioner/docker/token_manager.hpp"
#include "slave/containerizer/provisioner/paths.hpp"
#include "slave/containerizer/provisioner/provisioner.hpp"
#include "slave/containerizer/provisioner/store.hpp"
#include "slave/flags.hpp"
#include "slave/gc.hpp"
#include "slave/metrics.hpp"
#include "slave/monitor.hpp"
#include "slave/paths.hpp"
#include "slave/qos_controllers/noop.hpp"
#include "slave/resource_estimators/noop.hpp"
#include "slave/slave.hpp"
#include "slave/state.hpp"
#include "slave/status_update_manager.hpp"
#include "state/in_memory.hpp"
#include "state/leveldb.hpp"
#include "state/log.hpp"
#include "state/protobuf.hpp"
#include "state/state.hpp"
#include "state/storage.hpp"
#include "state/zookeeper.hpp"
#include "stout/format.hpp"
#include "stout/numify.hpp"
#include "stout/option.hpp"
#include "stout/os.hpp"
#include "stout/stringify.hpp"
#include "stout/synchronized.hpp"
#include "stout/try.hpp"
#include "test_anonymous_module.hpp"
#include "test_module.hpp"
#include "tests/cluster.hpp"
#include "tests/containerizer.hpp"
#include "tests/containerizer/isolator.hpp"
#include "tests/containerizer/launcher.hpp"
#include "tests/containerizer/memory_test_helper.hpp"
#include "tests/containerizer/provisioner.hpp"
#include "tests/containerizer/rootfs.hpp"
#include "tests/containerizer/setns_test_helper.hpp"
#include "tests/environment.hpp"
#include "tests/flags.hpp"
#include "tests/limiter.hpp"
#include "tests/mesos.hpp"
#include "tests/mesos.hpp" // For TEST_CGROUPS_(HIERARCHY|ROOT).
#include "tests/module.hpp"
#include "tests/script.hpp"
#include "tests/utils.hpp"
#include "tests/zookeeper.hpp"
#include "tests/zookeeper_test_server.hpp"
#include "usage/usage.hpp"
#include "version/version.hpp"
#include "watcher/whitelist_watcher.hpp"
#include "zookeeper/authentication.hpp"
#include "zookeeper/contender.hpp"
#include "zookeeper/detector.hpp"
#include "zookeeper/group.hpp"
#include "zookeeper/url.hpp"
#include "zookeeper/watcher.hpp"
#include "zookeeper/zookeeper.hpp"
#include <algorithm>
#include <apr_pools.h>
#include <arpa/inet.h>
#include <assert.h>
#include <atomic>
#include <boost/array.hpp>
#include <boost/circular_buffer.hpp>
#include <boost/foreach.hpp>
#include <boost/functional/hash.hpp>
#include <boost/get_pointer.hpp>
#include <boost/icl/interval.hpp>
#include <boost/icl/interval_set.hpp>
#include <boost/lexical_cast.hpp>
#include <boost/preprocessor/arithmetic/inc.hpp>
#include <boost/preprocessor/cat.hpp>
#include <boost/preprocessor/facilities/intercept.hpp>
#include <boost/preprocessor/repetition/enum_binary_params.hpp>
#include <boost/preprocessor/repetition/enum_params.hpp>
#include <boost/preprocessor/repetition/enum_trailing_params.hpp>
#include <boost/preprocessor/repetition/repeat.hpp>
#include <boost/preprocessor/repetition/repeat_from_to.hpp>
#include <boost/shared_array.hpp>
#include <boost/type_traits.hpp> // TODO(benh): Use C++11 type_traits.
#include <boost/type_traits/is_arithmetic.hpp>
#include <boost/utility/enable_if.hpp>
#include <boost/uuid/uuid.hpp>
#include <boost/uuid/uuid_generators.hpp>
#include <boost/uuid/uuid_io.hpp>
#include <boost/variant.hpp>
#include <cctype>
#include <chrono>
#include <condition_variable>
#include <cstdlib>
#include <cstring>
#include <ctype.h>
#include <curl/curl.h>
#include <deque>
#include <dirent.h>
#include <dlfcn.h>
#include <errno.h>
#include <event2/buffer.h>
#include <event2/bufferevent_ssl.h>
#include <event2/event.h>
#include <event2/listener.h>
#include <event2/thread.h>
#include <event2/util.h>
#include <executor/executor.pb.h>
#include <fcntl.h>
#include <float.h>
#include <fstab.h>
#include <fstream>
#include <fts.h>
#include <functional>
#include <glob.h>
#include <glog/logging.h>
#include <glog/raw_logging.h>
#include <gmock/gmock.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/io/zero_copy_stream_impl.h>
#include <google/protobuf/message.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <grp.h>
#include <gtest/gtest.h>
#include <hdfs/hdfs.hpp>
#include <http_parser.h>
#include <ifaddrs.h>
#include <initializer_list>
#include <iomanip>
#include <iosfwd>
#include <iostream>
#include <iterator>
#include <jni.h>
#include <jvm/java/io.hpp>
#include <jvm/java/net.hpp>
#include <jvm/jvm.hpp>
#include <jvm/org/apache/log4j.hpp>
#include <jvm/org/apache/zookeeper.hpp>
#include <leveldb/comparator.h>
#include <leveldb/db.h>
#include <leveldb/write_batch.h>
#include <limits.h>
#include <limits>
#include <linux/if.h>
#include <linux/if_packet.h>
#include <linux/limits.h>
#include <linux/sched.h>
#include <linux/sock_diag.h>
#include <linux/version.h>
#include <list>
#include <malloc.h>
#include <map>
#include <memory>
#include <mesos/attributes.hpp>
#include <mesos/authentication/authenticatee.hpp>
#include <mesos/authentication/authentication.hpp>
#include <mesos/authentication/authentication.pb.h>
#include <mesos/authentication/authenticator.hpp>
#include <mesos/authorizer/authorizer.hpp>
#include <mesos/authorizer/authorizer.pb.h>
#include <mesos/containerizer/containerizer.hpp>
#include <mesos/containerizer/containerizer.pb.h>
#include <mesos/executor.hpp>
#include <mesos/executor/executor.hpp>
#include <mesos/fetcher/fetcher.hpp>
#include <mesos/fetcher/fetcher.pb.h>
#include <mesos/hook.hpp>
#include <mesos/http.hpp>
#include <mesos/maintenance/maintenance.hpp>
#include <mesos/maintenance/maintenance.pb.h>
#include <mesos/master/allocator.hpp>
#include <mesos/master/allocator.pb.h>
#include <mesos/master/quota.pb.h>
#include <mesos/mesos.hpp>
#include <mesos/mesos.pb.h>
#include <mesos/module.hpp>
#include <mesos/module/allocator.hpp>
#include <mesos/module/anonymous.hpp>
#include <mesos/module/authenticatee.hpp>
#include <mesos/module/authenticator.hpp>
#include <mesos/module/authorizer.hpp>
#include <mesos/module/hook.hpp>
#include <mesos/module/isolator.hpp>
#include <mesos/module/module.hpp>
#include <mesos/module/module.pb.h>
#include <mesos/module/qos_controller.hpp>
#include <mesos/module/resource_estimator.hpp>
#include <mesos/resources.hpp>
#include <mesos/scheduler.hpp>
#include <mesos/scheduler/scheduler.hpp>
#include <mesos/scheduler/scheduler.pb.h>
#include <mesos/slave/isolator.hpp>
#include <mesos/slave/isolator.hpp> // For ContainerState.
#include <mesos/slave/isolator.pb.h>
#include <mesos/slave/oversubscription.hpp>
#include <mesos/slave/oversubscription.pb.h>
#include <mesos/slave/qos_controller.hpp>
#include <mesos/slave/resource_estimator.hpp>
#include <mesos/type_utils.hpp>
#include <mesos/v1/attributes.hpp>
#include <mesos/v1/executor/executor.hpp>
#include <mesos/v1/executor/executor.pb.h>
#include <mesos/v1/mesos.hpp>
#include <mesos/v1/mesos.pb.h>
#include <mesos/v1/resources.hpp>
#include <mesos/v1/scheduler.hpp>
#include <mesos/v1/scheduler/scheduler.hpp>
#include <mesos/v1/scheduler/scheduler.pb.h>
#include <mesos/v1/values.hpp>
#include <mesos/values.hpp>
#include <mesos/version.hpp>
#include <mntent.h>
#include <mutex>
#include <net/ethernet.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/tcp.h>
#include <netinet/tcp.h>
#include <openssl/bio.h>
#include <openssl/err.h>
#include <openssl/rand.h>
#include <openssl/rsa.h>
#include <openssl/ssl.h>
#include <openssl/x509.h>
#include <openssl/x509v3.h>
#include <ostream>
#include <paths.h>
#include <picojson.h>
#include <poll.h>
#include <process/address.hpp>
#include <process/async.hpp>
#include <process/check.hpp>
#include <process/clock.hpp>
#include <process/collect.hpp>
#include <process/defer.hpp>
#include <process/deferred.hpp>
#include <process/delay.hpp>
#include <process/dispatch.hpp>
#include <process/event.hpp>
#include <process/executor.hpp>
#include <process/filter.hpp>
#include <process/firewall.hpp>
#include <process/future.hpp>
#include <process/gc.hpp>
#include <process/gmock.hpp>
#include <process/gtest.hpp>
#include <process/help.hpp>
#include <process/http.hpp>
#include <process/id.hpp>
#include <process/io.hpp>
#include <process/latch.hpp>
#include <process/limiter.hpp>
#include <process/logging.hpp>
#include <process/message.hpp>
#include <process/metrics/counter.hpp>
#include <process/metrics/gauge.hpp>
#include <process/metrics/metric.hpp>
#include <process/metrics/metrics.hpp>
#include <process/metrics/timer.hpp>
#include <process/mime.hpp>
#include <process/mutex.hpp>
#include <process/network.hpp>
#include <process/once.hpp>
#include <process/owned.hpp>
#include <process/pid.hpp>
#include <process/process.hpp>
#include <process/profiler.hpp>
#include <process/protobuf.hpp>
#include <process/queue.hpp>
#include <process/reap.hpp>
#include <process/run.hpp>
#include <process/sequence.hpp>
#include <process/shared.hpp>
#include <process/socket.hpp>
#include <process/ssl/gtest.hpp>
#include <process/ssl/utilities.hpp>
#include <process/statistics.hpp>
#include <process/subprocess.hpp>
#include <process/system.hpp>
#include <process/time.hpp>
#include <process/timeout.hpp>
#include <process/timer.hpp>
#include <process/timeseries.hpp>
#include <pthread.h>
#include <pwd.h>
#include <queue>
#include <sasl/sasl.h>
#include <sasl/saslplug.h>
#include <sasl/saslutil.h>
#include <sched.h>
#include <set>
#include <signal.h>
#include <sstream>
#include <stack>
#include <stdarg.h>
#include <stddef.h>
#include <stdexcept>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <stout/abort.hpp>
#include <stout/attributes.hpp>
#include <stout/base64.hpp>
#include <stout/bits.hpp>
#include <stout/bytes.hpp>
#include <stout/cache.hpp>
#include <stout/check.hpp>
#include <stout/duration.hpp>
#include <stout/dynamiclibrary.hpp>
#include <stout/error.hpp>
#include <stout/exit.hpp>
#include <stout/path.hpp>
#include <stout/flags.hpp>
#include <stout/flags/fetch.hpp>
#include <stout/flags/flag.hpp>
#include <stout/flags/flags.hpp>
#include <stout/flags/parse.hpp>
#include <stout/foreach.hpp>
#include <stout/format.hpp>
#include <stout/fs.hpp>
#include <stout/gtest.hpp>
#include <stout/gzip.hpp>
#include <stout/hashmap.hpp>
#include <stout/hashset.hpp>
#include <stout/interval.hpp>
#include <stout/ip.hpp>
#include <stout/json.hpp>
#include <stout/lambda.hpp>
#include <stout/linkedhashmap.hpp>
#include <stout/list.hpp>
#include <stout/mac.hpp>
#include <stout/multihashmap.hpp>
#include <stout/multimap.hpp>
#include <stout/net.hpp>
#include <stout/none.hpp>
#include <stout/nothing.hpp>
#include <stout/numify.hpp>
#include <stout/option.hpp>
#include <stout/os.hpp>
#include <stout/os/bootid.hpp>
#include <stout/os/close.hpp>
#include <stout/os/environment.hpp>
#include <stout/os/exists.hpp>
#include <stout/os/fcntl.hpp>
#include <stout/os/fork.hpp>
#include <stout/os/ftruncate.hpp>
#include <stout/os/killtree.hpp>
#include <stout/os/linux.hpp>
#include <stout/os/ls.hpp>
#include <stout/os/open.hpp>
#include <stout/os/os.hpp>
#include <stout/os/permissions.hpp>
#include <stout/os/posix/bootid.hpp>
#include <stout/os/posix/exists.hpp>
#include <stout/os/posix/fcntl.hpp>
#include <stout/os/posix/fork.hpp>
#include <stout/os/posix/ftruncate.hpp>
#include <stout/os/posix/killtree.hpp>
#include <stout/os/posix/ls.hpp>
#include <stout/os/posix/process.hpp>
#include <stout/os/posix/pstree.hpp>
#include <stout/os/posix/sendfile.hpp>
#include <stout/os/posix/shell.hpp>
#include <stout/os/posix/signals.hpp>
#include <stout/os/posix/stat.hpp>
#include <stout/os/process.hpp>
#include <stout/os/pstree.hpp>
#include <stout/os/raw/environment.hpp>
#include <stout/os/read.hpp>
#include <stout/os/realpath.hpp>
#include <stout/os/rename.hpp>
#include <stout/os/rm.hpp>
#include <stout/os/sendfile.hpp>
#include <stout/os/shell.hpp>
#include <stout/os/signals.hpp>
#include <stout/os/stat.hpp>
#include <stout/os/write.hpp>
#include <stout/posix/gzip.hpp>
#include <stout/posix/os.hpp>
#include <stout/preprocessor.hpp>
#include <stout/proc.hpp>
#include <stout/protobuf.hpp>
#include <stout/recordio.hpp>
#include <stout/result.hpp>
#include <stout/set.hpp>
#include <stout/some.hpp>
#include <stout/stopwatch.hpp>
#include <stout/stringify.hpp>
#include <stout/strings.hpp>
#include <stout/subcommand.hpp>
#include <stout/svn.hpp>
#include <stout/synchronized.hpp>
#include <stout/tests/utils.hpp>
#include <stout/thread_local.hpp>
#include <stout/try.hpp>
#include <stout/unreachable.hpp>
#include <stout/utils.hpp>
#include <stout/uuid.hpp>
#include <stout/version.hpp>
#include <string.h>
#include <string>
#include <svn_delta.h>
#include <svn_error.h>
#include <svn_pools.h>
#include <svn_version.h>
#include <sys/ioctl.h>
#include <sys/mman.h>
#include <sys/mount.h>
#include <sys/param.h>
#include <sys/prctl.h>
#include <sys/ptrace.h>
#include <sys/select.h>
#include <sys/sendfile.h>
#include <sys/socket.h>
#include <sys/stat.h>
#include <sys/statvfs.h>
#include <sys/syscall.h>
#include <sys/sysctl.h>
#include <sys/sysinfo.h>
#include <sys/time.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <sys/utsname.h>
#include <sys/wait.h>
#include <thread>
#include <time.h>
#include <type_traits>
#include <typeinfo>
#include <unistd.h>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <utime.h>
#include <vector>
#include <zlib.h>
#include <zookeeper.h>
